name: Gradle Package

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0
      with:
        cache-disabled: true

    - name: Build with Gradle
      run: ./gradlew build

    - name: Publish to GitHub Packages
      run: |
        # Сначала собираем проект
        ./gradlew build

        # Затем публикуем готовый JAR файл
        cat > init-publish.gradle << 'EOF'
        allprojects {
            apply plugin: 'maven-publish'

            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        // Используем уже собранный JAR файл
                        artifact file("$project.buildDir/libs/hactions-0.0.1-SNAPSHOT.jar")
                        groupId = 'org.example'
                        artifactId = 'hactions'
                        version = '0.0.1-SNAPSHOT'
                    }
                }
                repositories {
                    maven {
                        name = "GitHubPackages"
                        url = uri("https://maven.pkg.github.com/${{ github.repository }}")
                        credentials {
                            username = System.getenv("USERNAME")
                            password = System.getenv("TOKEN")
                        }
                    }
                }
            }
        }
        EOF

        ./gradlew publish --init-script init-publish.gradle
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}